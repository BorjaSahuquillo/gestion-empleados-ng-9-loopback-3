version: '2.1'
services:
    database:
      container_name: database
      image: mongo:3.6.23-xenial
      restart: always   
      ports:
        - "27017:27017"
      volumes:
        - mongo-data:/data/db
        - ./db-employee-and-department/entrypoint/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
      environment:
        - NODE_ENV=development
        - MONGO_INITDB_ROOT_USERNAME=admin
        - MONGO_INITDB_ROOT_PASSWORD=admin1234
      healthcheck:
        test: mongo --eval "db.runCommand('ping').ok"
        interval: 5s
        timeout: 5s
        retries: 12
      extra_hosts:
        - "host.docker.internal:host-gateway"

#      networks:
#        employee-and-department-network:
#          aliases:
#            - db

    api:
      container_name: api
      build:
        context: ./api-employee-and-department
        dockerfile: ./Dockerfile
      image: docker/api
      restart: always
      ports:
        - "3000:3000"
      extra_hosts:
        - "host.docker.internal:host-gateway"
      environment:
        - DB_HOST=database
        - DB_PORT=27017
        - DB_NAME=employee-and-department
        - DB_USER=db-user
        - DB_PASSWORD=12341234

#      networks:
#        employee-and-department-network:
#          aliases:
#            - api
#      volumes:
#        - ./api-employee-and-department:/app
    
    angular-service:
      container_name: ng-employee-and-department
      build:
        context: ./webapp-employee-and-department
        dockerfile: ./Dockerfile
      ports: 
        - '80:80'
      extra_hosts:
        - "host.docker.internal:host-gateway"
#      networks:
#        employee-and-department-network:
#          aliases:
#            - webapp

volumes:
  mongo-data:
    name: mongo-data

#networks:
#  employee-and-department-network:
#    name: employee-and-department-network
#    external: true
